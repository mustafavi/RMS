@model RMS.Web.ViewModel.PropertyModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>PropertyModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="PropertyAddress" class="control-label"></label>
                <input asp-for="PropertyAddress" class="form-control" />
                <span asp-validation-for="PropertyAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Flats, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @*@Html.DropDownListFor(model => model.Flats, ViewBag.list as SelectList,  "Select your property")*@
                    @Html.DropDownListFor(model => model.Flats, new SelectList(Model.Flats, "FlatId", "FlatAddress") )
                    @*new SelectList(flats, "FlatId", "FlatAddress");*@
                    @Html.ValidationMessageFor(model => model.Flats, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
