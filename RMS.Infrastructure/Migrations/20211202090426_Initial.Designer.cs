// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RMS.Infrastructure;

#nullable disable

namespace RMS.Infrastructure.Migrations
{
    [DbContext(typeof(RMSContext))]
    [Migration("20211202090426_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RMS.Data.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BillDueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BillPaidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillType")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("RMS.Data.Flat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FlatAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("Flat");
                });

            modelBuilder.Entity("RMS.Data.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("RMS.Data.Rent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AdvancePaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RentDue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentPaid")
                        .HasColumnType("datetime2");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("Rent");
                });

            modelBuilder.Entity("RMS.Data.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ContractExpires")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ContractStarted")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FlatId")
                        .HasColumnType("int");

                    b.Property<string>("NIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalFamilyMembers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlatId");

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("RMS.Data.Bill", b =>
                {
                    b.HasOne("RMS.Data.Tenant", "Tenant")
                        .WithMany("Bill")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("RMS.Data.Flat", b =>
                {
                    b.HasOne("RMS.Data.Property", "Property")
                        .WithMany("Flat")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("RMS.Data.Rent", b =>
                {
                    b.HasOne("RMS.Data.Tenant", "Tenant")
                        .WithMany("Rent")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("RMS.Data.Tenant", b =>
                {
                    b.HasOne("RMS.Data.Flat", "Flat")
                        .WithMany()
                        .HasForeignKey("FlatId");

                    b.Navigation("Flat");
                });

            modelBuilder.Entity("RMS.Data.Property", b =>
                {
                    b.Navigation("Flat");
                });

            modelBuilder.Entity("RMS.Data.Tenant", b =>
                {
                    b.Navigation("Bill");

                    b.Navigation("Rent");
                });
#pragma warning restore 612, 618
        }
    }
}
